# Краткое руководство по **git**  
## *git* - это профессиональная система контроля версий 
### Основные команды при работе с git:
* *git init* - инициализировать выбранный каталог (папку) как репозиторий.
* *git add* - добавить файл к репозиторию (наблюдению за изменениями).
* *git status* - проверить статус репозитория.
* *git commit* - зафиксировать изменения.
* *git log* - просмотр журнала изменений (коммитов).
* *git diff* - разница между текущим состоянием файла и последним зафиксированным состоянием файла (коммитом).
* *git checkout* - переход к предыдущему коммиту. Наименование коммита указывать через пробел не менее 5-ти символов от названия.
* *git init* - инициализировать выбранный каталог (папку) как репозиторий  
* *git add* - добавить файл к репозиторию (наблюдению за изменениями)  
* *git status* - проверить статус репозитория  
* *git commit* - зафиксировать изменения  
* *git log* - просмотр журнала изменений (коммитов)
* *git diff* - разница между текущим состоянием файла и последним зафиксированным состоянием файла (коммитом)
* *git checkout* - переход к предыдущему коммиту. (Наименование коммита указывать через пробел не менее 5-ти символов от названия)
### Команды при работе с ветками:
* *git branch* - выводит список веток
* *git branch **name*** - создает ветку с именем **name**
* *git checkout **name*** - переход на ветку **name**
* *git merge **name*** - слияние текущей ветки с веткой **name**
* *git log --graph* - отображает связь веток со всеми слияниями и фиксациями
* *git branch - d **name*** - удаляет ветку **name**
### Команды при работе с удаленными репозиториями:
* *git clone **https://github.сom/....*** - Подключает удаленный репозиторий к локальному
* *git pull* - скачивает текущую ветку из удаленного репозитория в локальный репозиторий
* *git push* - отправляет версию локального репозитория на удаленный репозиторий. Требует авторизации на **github.com**%        kyzlt@Air-von-Kyrylo HW_3856 % cat KononovVJ.md
File KononovVJ
kyzlt@Air-von-Kyrylo HW_3856 % cat Pobezhimov_Maksim.md
# Руководство по Git
## 1. Создание репозитория:
* **git init** - *создает новый репозиторий*
* **git clone** - *скачать репозиторий*

## 2. Состояние репозитория:
* **git status** - *отображает состояние рабочего каталога*
* **git diff** - *показывает различия текущей версии от последней сохраненной*
* **git diff HEAD** - *показывает все изменения*
* **git diff HEAD hash1 hash2** - *показывает изменения между двумя коммитами*
* **git log** - *показывает список коммитов*

## 3.  Сохранение изменений
* **git add** - *добавляет файл в отслеживание*
* **git commit -m** - *закоммитить файлы с сообщением*
* **git commit -am** - *закоммитить все файлы с сообщением*
* **git reset** - *удаляет измененный файл из индекса,оставив изменения в нем*
* **git reset --hard** - *отменяет все изменения в папке и возвращает все к последнему коммиту*
* **git checkout** - *перемещает между коммитами*

## 4. Блок для примера освоения Git и Markdown 
1. Ссылки 

* Это встроенная [ ссылка с title элементом ](http://example.com/link " Я ссылка" )
* Это- [ без title ](http://example.com/link)
* [![Картинка Geek Brains](//image2.jpg)]

## Ветки 
* **git branch [name]** - *создает новую ветку*
* **git branch** - *выводит список веток*
* **git branch -d [name}** - *удаление ветки*
* **git branch checkout [name]** - *переход на нужную ветку*
* **git log --garph** - *наглядное отображение всех веток и слияний их*
* **git merge [name]** - *слияние веток (нужно стоять на ветке в которую сливаем)*